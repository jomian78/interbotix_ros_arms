<launch>
  <!-- Robot name and arm models passed from multi_arm.launch -->
  <arg name="robot_name"                    default=""/>
  <arg name="arm_A_robot_model"             default=""/>
  <arg name="arm_B_robot_model"             default=""/>

  <!-- Relative displacement between arm A and arm B -->
  <arg name="relative_x"                    default = "0"/>
  <arg name="relative_y"                    default = "0.22"/>
  <arg name="relative_z"                    default = "0"/>
  <arg name="relative_roll"                 default = "0"/>
  <arg name="relative_pitch"                default = "0"/>
  <arg name="relative_yaw"                  default = "0"/>

  <!-- other args passed from multi_arm.launch -->
  <arg name="use_joint_pub"                 default="true"/>
  <arg name="use_default_rviz"              default="true"/>
  <arg name="use_default_gripper_bar"       default="true"/>
  <arg name="use_default_gripper_fingers"   default="true"/>
  <arg name="use_external_gripper_urdf"     default="false"/>
  <arg name="external_gripper_urdf_loc"     default=""/>
  <arg name="load_gazebo_material"          default="false"/>
  <arg name="load_moveit_world_frame"       default="true"/>

  <!-- model/config args NOT passed from multi_arm.launch -->
  <arg name="jnt_pub_gui"                   default="true"/>

  <!-- May need to edit this -->
  <arg name="rvizconfig"                    default="$(find interbotix_descriptions)/rviz/description.rviz" />
  <!-- May need to edit this -->
  <arg name="model"                         default="$(find interbotix_descriptions)/urdf/$(arg robot_name).urdf.xacro
                                                     robot_name:=$(arg robot_name)
                                                     arm_A_robot_model:=$(arg arm_A_robot_model)
                                                     arm_B_robot_model:=$(arg arm_B_robot_model)
                                                     default_gripper_bar:=$(arg use_default_gripper_bar)
                                                     default_gripper_fingers:=$(arg use_default_gripper_fingers)
                                                     external_gripper_urdf:=$(arg use_external_gripper_urdf)
                                                     external_gripper_urdf_loc:=$(arg external_gripper_urdf_loc)
                                                     gazebo:=$(arg load_gazebo_material)
                                                     moveit:=$(arg load_moveit_world_frame)
                                                     relative_x:=$(arg relative_x)
                                                     relative_y:=$(arg relative_y)
                                                     relative_z:=$(arg relative_z)
                                                     relative_roll:=$(arg relative_roll)
                                                     relative_pitch:=$(arg relative_pitch)
                                                     relative_yaw:=$(arg relative_yaw)"/>

  <param name="$(arg robot_name)/robot_description"  command="$(find xacro)/xacro $(arg model)" />

  <!-- If we're not using the combine_arm_joints node -->
  <!-- <node if="$(arg use_joint_pub)"
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher"
    ns="$(arg robot_name)">
    <param name="use_gui" value="$(arg jnt_pub_gui)"/>
    <param name="publish_default_positions" value="false"/>
    <rosparam param="source_list">["wx200_arm_A/joint_states", "wx200_arm_B/joint_states"]</rosparam>
  </node> -->

  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher"
    ns="$(arg robot_name)">
  </node>

  <!-- Created a transform between /world and /link0 -->
  <group if="$(arg use_default_rviz)">

    <node
      name="rviz"
      pkg="rviz"
      type="rviz"
      args="-d $(arg rvizconfig)"
      required="true"
      ns="$(arg robot_name)"/>

    <node
      name="robot_transform_broadcaster"
      pkg="tf2_ros"
      type="static_transform_publisher"
      args="0 0 0 0 0 0 /world /link0"/>

  </group>

</launch>
